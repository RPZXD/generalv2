<?php
session_start();
if (!isset($_SESSION['username']) || !isset($_SESSION['role']) || $_SESSION['role'] !== '‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà') {
    header('Location: ../login.php');
    exit;
}
$config = json_decode(file_get_contents('../config.json'), true);
$global = $config['global'];

require_once('header.php');

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Controller
require_once('../controllers/ReportRepairController.php');
use Controllers\ReportRepairController;

$controller = new ReportRepairController();
$repairs = $controller->getAll(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô getAll() ‡πÉ‡∏ô Controller/Model
?>
<body class="hold-transition sidebar-mini layout-fixed light-mode">
<div class="wrapper">
    <?php require_once('wrapper.php');?>

    <div class="content-wrapper">
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1 class="m-0"><?php echo $global['nameschool']; ?> <span class="text-blue-600">| ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</span></h1>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.content-header -->

        <section class="content">
            <div class="container-fluid">
                <div class="alert alert-info mb-4 rounded-lg flex items-center gap-2 bg-blue-50 border-l-4 border-blue-400 text-blue-800 p-4 shadow">
                    üõ†Ô∏è <span>‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</span>
                </div>
                <!-- ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏° -->
                <div class="card bg-white rounded-xl shadow-lg border border-gray-200">
                    <div class="card-header bg-gradient-to-r from-blue-500 to-blue-700 text-white rounded-t-xl px-6 py-4 flex items-center gap-2 text-lg font-bold">
                        üìù ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    </div>
                    <div class="card-body p-0">
                        <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200 text-sm">
                            <thead class="bg-blue-100">
                                <tr>
                                    <th class="px-4 py-3 text-left font-semibold text-blue-700">#</th>
                                    <th class="px-4 py-3 text-left font-semibold text-blue-700">üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á</th>
                                    <th class="px-4 py-3 text-left font-semibold text-blue-700">üìç ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                                    <th class="px-4 py-3 text-left font-semibold text-blue-700">üîñ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                                    <th class="px-4 py-3 text-center font-semibold text-blue-700">‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                                </tr>
                            </thead>
                            <tbody id="repair-tbody" class="divide-y divide-gray-100 bg-white">
                                <!-- JS will render rows here -->
                            </tbody>
                        </table>
                        </div>
                    </div>
                </div>
                <!-- ‡∏à‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á -->

                <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏° -->
                <div id="modal-detail-bg" class="fixed inset-0 bg-black bg-opacity-40 z-50 hidden flex items-center justify-center">
                    <div class="bg-white rounded-xl shadow-lg max-w-lg w-full p-6 relative">
                        <button id="modal-detail-close" class="absolute top-2 right-2 text-gray-400 hover:text-red-500 text-2xl font-bold">&times;</button>
                        <h2 class="text-xl font-bold mb-4 flex items-center gap-2 text-blue-700">üëÅÔ∏è ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</h2>
                        <div id="modal-detail-content" class="space-y-2 text-gray-700">
                            <!-- JS will render detail here -->
                        </div>
                    </div>
                </div>
                <!-- /Modal -->

                <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ -->
                <div id="modal-update-bg" class="fixed inset-0 bg-black bg-opacity-40 z-50 hidden flex items-center justify-center">
                    <div class="bg-white rounded-xl shadow-lg max-w-lg w-full p-6 relative">
                        <button id="modal-update-close" class="absolute top-2 right-2 text-gray-400 hover:text-red-500 text-2xl font-bold">&times;</button>
                        <h2 class="text-xl font-bold mb-4 flex items-center gap-2 text-green-700">‚úèÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</h2>
                        <form id="modal-update-form" class="space-y-4">
                            <input type="hidden" name="id" id="update-id">
                            <div>
                                <label for="update-status" class="block font-semibold mb-1">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà</label>
                                <select name="status" id="update-status" class="w-full border rounded px-3 py-2">
                                    <option value="0">üïí ‡∏£‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</option>
                                    <option value="1">üîÑ ‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</option>
                                    <option value="2">üõí ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡∏ß‡∏±‡∏™‡∏î‡∏∏</option>
                                    <option value="3">‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à</option>
                                </select>
                            </div>
                            <div>
                                <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow font-semibold">
                                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                                </button>
                            </div>
                            <div id="update-result" class="text-center text-sm mt-2"></div>
                        </form>
                    </div>
                </div>
                <!-- /Modal -->

                <!-- Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î -->
                <div id="modal-edit-bg" class="fixed inset-0 bg-black bg-opacity-40 z-50 hidden flex items-center justify-center">
                    <div class="bg-white rounded-xl shadow-lg max-w-2xl w-full p-6 relative">
                        <button id="modal-edit-close" class="absolute top-2 right-2 text-gray-400 hover:text-red-500 text-2xl font-bold">&times;</button>
                        <h2 class="text-xl font-bold mb-4 flex items-center gap-2 text-yellow-700">üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</h2>
                        <form id="modal-edit-form" class="space-y-4">
                            <input type="hidden" name="id" id="edit-id">
                            <div>
                                <label class="block font-semibold mb-1">‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà/‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</label>
                                <input type="text" name="AddLocation" id="edit-AddLocation" class="w-full border rounded px-3 py-2" required>
                            </div>
                            <div>
                                <label class="block font-semibold mb-1">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÜ</label>
                                <textarea name="other1Details" id="edit-other1Details" class="w-full border rounded px-3 py-2"></textarea>
                            </div>
                            <!-- ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ -->
                            <div>
                                <button type="submit" class="bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded shadow font-semibold">
                                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                </button>
                            </div>
                            <div id="edit-result" class="text-center text-sm mt-2"></div>
                        </form>
                    </div>
                </div>
                <!-- /Modal -->

                <!-- Toast Alert -->
                <div id="toast-alert" class="fixed top-6 right-6 z-[9999] hidden">
                    <div id="toast-content" class="flex items-center px-4 py-3 rounded shadow text-white font-semibold"></div>
                </div>
                <!-- /Toast Alert -->

            </div>
        </section>
        <!-- /.content -->
    </div>
    <?php require_once('../footer.php');?>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    fetch('api/repair_list.php')
        .then(res => res.json())
        .then(data => {
            const tbody = document.getElementById('repair-tbody');
            tbody.innerHTML = '';
            if (Array.isArray(data) && data.length > 0) {
                data.forEach(row => {
                    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á
                    let badge = 'bg-gray-300 text-gray-800', icon = '‚è≥', statusText = '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
                    switch (row.status) {
                        case '0':
                        case 0:
                            badge = 'bg-yellow-200 text-yellow-800 animate-pulse';
                            icon = 'üïí';
                            statusText = '‡∏£‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö';
                            break;
                        case '1':
                        case 1:
                            badge = 'bg-blue-200 text-blue-800';
                            icon = 'üîÑ';
                            statusText = '‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
                            break;
                        case '2':
                        case 2:
                            badge = 'bg-orange-200 text-orange-800';
                            icon = 'üõí';
                            statusText = '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡∏ß‡∏±‡∏™‡∏î‡∏∏';
                            break;
                        case '3':
                        case 3:
                            badge = 'bg-green-200 text-green-800';
                            icon = '‚úÖ';
                            statusText = '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à';
                            break;
                    }
                    tbody.innerHTML += `
                        <tr class="hover:bg-blue-50 transition">
                            <td class="px-4 py-2 font-mono text-blue-900">${row.id}</td>
                            <td class="px-4 py-2">${row.AddDate}</td>
                            <td class="px-4 py-2 flex items-center gap-2">
                                <span class="text-lg">üîß</span>
                                <span>${row.AddLocation}</span>
                            </td>
                            <td class="px-4 py-2">
                                <span class="inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-semibold ${badge}">
                                    ${icon} ${statusText}
                                </span>
                            </td>
                            <td class="px-4 py-2 text-center">
                                <button
                                   class="btn-detail inline-flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150"
                                   data-id="${row.id}"
                                   title="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°">
                                    üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                                </button>
                                <button
                                   class="btn-update inline-flex items-center gap-1 bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150 ml-1"
                                   data-id="${row.id}"
                                   title="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞">
                                    ‚úèÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                                </button>
                                <button
                                   class="btn-delete inline-flex items-center gap-1 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150 ml-1"
                                   data-id="${row.id}"
                                   title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£">
                                    üóëÔ∏è ‡∏•‡∏ö
                                </button>
                            </td>
                        </tr>
                    `;
                });

                // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                document.querySelectorAll('.btn-detail').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        showRepairDetailModal(id);
                    });
                });
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                document.querySelectorAll('.btn-update').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        showRepairUpdateModal(id);
                    });
                });
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                document.querySelectorAll('.btn-edit').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        showRepairEditModal(id);
                    });
                });
                // ‡πÄ‡∏û‡∏¥‡πà‡∏° event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
                document.querySelectorAll('.btn-delete').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        // Tailwind CSS confirm dialog
                        showTailwindConfirm({
                            title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
                            message: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
                            confirmText: '‡∏•‡∏ö',
                            cancelText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
                            onConfirm: () => {
                                fetch('api/repair_delete.php', {
                                    method: 'POST',
                                    headers: {'Content-Type': 'application/json'},
                                    body: JSON.stringify({id})
                                })
                                .then(res => res.json())
                                .then(data => {
                                    if (data && data.success) {
                                        showToast('‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
                                        document.dispatchEvent(new Event('repair-updated'));
                                    } else {
                                        showToast('‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'error');
                                    }
                                })
                                .catch(() => {
                                    showToast('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö', 'error');
                                });
                            }
                        });
                    });
                });
            } else {
                tbody.innerHTML = `<tr>
                    <td colspan="5" class="text-center py-6 text-gray-400 text-lg">
                        üòï ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
                    </td>
                </tr>`;
            }
        })
        .catch(() => {
            const tbody = document.getElementById('repair-tbody');
            tbody.innerHTML = `<tr>
                <td colspan="5" class="text-center py-6 text-red-400 text-lg">
                    ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ
                </td>
            </tr>`;
        });

    // Modal close
    document.getElementById('modal-detail-close').onclick = function() {
        document.getElementById('modal-detail-bg').classList.add('hidden');
    };
    document.getElementById('modal-detail-bg').onclick = function(e) {
        if (e.target === this) this.classList.add('hidden');
    };

    // Modal close ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
    document.getElementById('modal-update-close').onclick = function() {
        document.getElementById('modal-update-bg').classList.add('hidden');
    };
    document.getElementById('modal-update-bg').onclick = function(e) {
        if (e.target === this) this.classList.add('hidden');
    };

});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á modal
function showRepairDetailModal(id) {
    const modalBg = document.getElementById('modal-detail-bg');
    const modalContent = document.getElementById('modal-detail-content');
    modalContent.innerHTML = '<div class="text-center text-blue-500 py-4">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>';
    modalBg.classList.remove('hidden');
    fetch('api/repair_detail.php?id=' + encodeURIComponent(id))
        .then(res => res.json())
        .then(data => {
            if (data && data.id) {
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                let html = `
                    <div class="mb-2"><b>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</b> ${data.id}</div>
                    <div class="mb-2"><b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á:</b> ${data.AddDate || '-'}</div>
                    <div class="mb-2"><b>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà/‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</b> ${data.AddLocation || '-'}</div>
                    <div class="mb-2"><b>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</b> ${getStatusText(data.status)}</div>
                    <div class="overflow-x-auto">
                    <table class="min-w-full text-xs border mt-4">
                        <thead>
                            <tr class="bg-blue-100 text-blue-700">
                                <th class="px-2 py-1 border">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                                <th class="px-2 py-1 border">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                <th class="px-2 py-1 border">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr><td class="border px-2 py-1">üö™ ‡∏õ‡∏£‡∏∞‡∏ï‡∏π</td><td class="border px-2 py-1">${data.doorCount ?? '-'}</td><td class="border px-2 py-1">${data.doorDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">ü™ü ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á</td><td class="border px-2 py-1">${data.windowCount ?? '-'}</td><td class="border px-2 py-1">${data.windowDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">ü™ë ‡πÇ‡∏ï‡πä‡∏∞‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</td><td class="border px-2 py-1">${data.tablestCount ?? '-'}</td><td class="border px-2 py-1">${data.tablestDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">ü™ë ‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</td><td class="border px-2 py-1">${data.chairstCount ?? '-'}</td><td class="border px-2 py-1">${data.chairstDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">ü™ë ‡πÇ‡∏ï‡πä‡∏∞‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</td><td class="border px-2 py-1">${data.tabletaCount ?? '-'}</td><td class="border px-2 py-1">${data.tabletaDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">ü™ë ‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå</td><td class="border px-2 py-1">${data.chairtaCount ?? '-'}</td><td class="border px-2 py-1">${data.chairtaDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üìã ‡∏≠‡∏∑‡πà‡∏ô‡πÜ 1</td><td class="border px-2 py-1">${data.other1Count ?? '-'}</td><td class="border px-2 py-1">${data.other1Details || '-'}<br>${data.other1Damage || ''}</td></tr>
                            <tr><td class="border px-2 py-1">üì∫ ‡∏ó‡∏µ‡∏ß‡∏µ</td><td class="border px-2 py-1">${data.tvCount ?? '-'}</td><td class="border px-2 py-1">${data.tvDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üîä ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á</td><td class="border px-2 py-1">${data.audioCount ?? '-'}</td><td class="border px-2 py-1">${data.audioDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üîå HDMI</td><td class="border px-2 py-1">${data.hdmiCount ?? '-'}</td><td class="border px-2 py-1">${data.hdmiDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üìΩÔ∏è ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå</td><td class="border px-2 py-1">${data.projectorCount ?? '-'}</td><td class="border px-2 py-1">${data.projectorDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üìã ‡∏≠‡∏∑‡πà‡∏ô‡πÜ 2</td><td class="border px-2 py-1">${data.other2Count ?? '-'}</td><td class="border px-2 py-1">${data.other2Details || '-'}<br>${data.other2Damage || ''}</td></tr>
                            <tr><td class="border px-2 py-1">üåÄ ‡∏û‡∏±‡∏î‡∏•‡∏°</td><td class="border px-2 py-1">${data.fanCount ?? '-'}</td><td class="border px-2 py-1">${data.fanDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üí° ‡πÑ‡∏ü</td><td class="border px-2 py-1">${data.lightCount ?? '-'}</td><td class="border px-2 py-1">${data.lightDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">‚ùÑÔ∏è ‡πÅ‡∏≠‡∏£‡πå</td><td class="border px-2 py-1">${data.airCount ?? '-'}</td><td class="border px-2 py-1">${data.airDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üîò ‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡πÑ‡∏ü</td><td class="border px-2 py-1">${data.swCount ?? '-'}</td><td class="border px-2 py-1">${data.swDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üîò ‡∏™‡∏ß‡∏¥‡∏ï‡∏ä‡πå‡∏û‡∏±‡∏î‡∏•‡∏°</td><td class="border px-2 py-1">${data.swfanCount ?? '-'}</td><td class="border px-2 py-1">${data.swfanDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üîå ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü</td><td class="border px-2 py-1">${data.plugCount ?? '-'}</td><td class="border px-2 py-1">${data.plugDamage || '-'}</td></tr>
                            <tr><td class="border px-2 py-1">üìã ‡∏≠‡∏∑‡πà‡∏ô‡πÜ 3</td><td class="border px-2 py-1">${data.other3Count ?? '-'}</td><td class="border px-2 py-1">${data.other3Details || '-'}<br>${data.other3Damage || ''}</td></tr>
                        </tbody>
                    </table>
                    </div>
                `;
                modalContent.innerHTML = html;
            } else {
                modalContent.innerHTML = '<div class="text-center text-red-500 py-4">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>';
            }
        })
        .catch(() => {
            modalContent.innerHTML = '<div class="text-center text-red-500 py-4">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>';
        });
}

// ‡πÅ‡∏õ‡∏•‡∏á‡∏£‡∏´‡∏±‡∏™‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function getStatusText(status) {
    switch (status) {
        case '0':
        case 0: return 'üïí ‡∏£‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö';
        case '1':
        case 1: return 'üîÑ ‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
        case '2':
        case 2: return 'üõí ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡∏ß‡∏±‡∏™‡∏î‡∏∏';
        case '3':
        case 3: return '‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à';
        default: return '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á modal ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
function showRepairUpdateModal(id) {
    document.getElementById('update-id').value = id;
    document.getElementById('update-status').selectedIndex = 0;
    document.getElementById('update-result').innerHTML = '';
    document.getElementById('modal-update-bg').classList.remove('hidden');
    // ‡∏î‡∏∂‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á (optional)
    fetch('api/repair_detail.php?id=' + encodeURIComponent(id))
        .then(res => res.json())
        .then(data => {
            if (data && typeof data.status !== 'undefined') {
                document.getElementById('update-status').value = data.status;
            }
        });
}



// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ submit ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
document.getElementById('modal-update-form').onsubmit = function(e) {
    e.preventDefault();
    const id = document.getElementById('update-id').value;
    const status = document.getElementById('update-status').value;
    const resultDiv = document.getElementById('update-result');
    resultDiv.innerHTML = '<span class="text-blue-500">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...</span>';
    fetch('api/repair_update.php', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({id, status})
    })
    .then(res => res.json())
    .then(data => {
        if (data && data.success) {
            showToast('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
            setTimeout(() => {
                document.getElementById('modal-update-bg').classList.add('hidden');
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á reload ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤
                document.dispatchEvent(new Event('repair-updated'));
            }, 800);
        } else {
            showToast('‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'error');
        }
    })
    .catch(() => {
        showToast('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î', 'error');
    });
};



// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
document.addEventListener('repair-updated', function() {
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    fetch('api/repair_list.php')
        .then(res => res.json())
        .then(data => {
            const tbody = document.getElementById('repair-tbody');
            tbody.innerHTML = '';
            if (Array.isArray(data) && data.length > 0) {
                data.forEach(row => {
                    let badge = 'bg-gray-300 text-gray-800', icon = '‚è≥', statusText = '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞';
                    switch (row.status) {
                        case '0':
                        case 0:
                            badge = 'bg-yellow-200 text-yellow-800 animate-pulse';
                            icon = 'üïí';
                            statusText = '‡∏£‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö';
                            break;
                        case '1':
                        case 1:
                            badge = 'bg-blue-200 text-blue-800';
                            icon = 'üîÑ';
                            statusText = '‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
                            break;
                        case '2':
                        case 2:
                            badge = 'bg-orange-200 text-orange-800';
                            icon = 'üõí';
                            statusText = '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå/‡∏ß‡∏±‡∏™‡∏î‡∏∏';
                            break;
                        case '3':
                        case 3:
                            badge = 'bg-green-200 text-green-800';
                            icon = '‚úÖ';
                            statusText = '‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à';
                            break;
                    }
                    // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç: ‡∏ñ‡πâ‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ == 3 (‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏™‡∏£‡πá‡∏à) ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                    tbody.innerHTML += `
                        <tr class="hover:bg-blue-50 transition">
                            <td class="px-4 py-2 font-mono text-blue-900">${row.id}</td>
                            <td class="px-4 py-2">${row.AddDate}</td>
                            <td class="px-4 py-2 flex items-center gap-2">
                                <span class="text-lg">üîß</span>
                                <span>${row.AddLocation}</span>
                            </td>
                            <td class="px-4 py-2">
                                <span class="inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-semibold ${badge}">
                                    ${icon} ${statusText}
                                </span>
                            </td>
                            <td class="px-4 py-2 text-center">
                                <button
                                   class="btn-detail inline-flex items-center gap-1 bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150"
                                   data-id="${row.id}"
                                   title="‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°">
                                    üëÅÔ∏è ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                                </button>
                                ${
                                    row.status == 3 || row.status == '3'
                                    ? ''
                                    : `<button
                                        class="btn-update inline-flex items-center gap-1 bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150 ml-1"
                                        data-id="${row.id}"
                                        title="‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞">
                                        ‚úèÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                                    </button>`
                                }
                                <button
                                   class="btn-delete inline-flex items-center gap-1 bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-full text-xs font-medium shadow transition duration-150 ml-1"
                                   data-id="${row.id}"
                                   title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£">
                                    üóëÔ∏è ‡∏•‡∏ö
                                </button>
                            </td>
                        </tr>
                    `;
                });

                // ‡∏£‡∏µ‡∏ú‡∏π‡∏Å event ‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
                document.querySelectorAll('.btn-detail').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        showRepairDetailModal(id);
                    });
                });
                document.querySelectorAll('.btn-update').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        showRepairUpdateModal(id);
                    });
                });
                document.querySelectorAll('.btn-delete').forEach(btn => {
                    btn.addEventListener('click', function() {
                        const id = this.getAttribute('data-id');
                        // Tailwind CSS confirm dialog
                        showTailwindConfirm({
                            title: '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö',
                            message: '‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?',
                            confirmText: '‡∏•‡∏ö',
                            cancelText: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
                            onConfirm: () => {
                                fetch('api/repair_delete.php', {
                                    method: 'POST',
                                    headers: {'Content-Type': 'application/json'},
                                    body: JSON.stringify({id})
                                })
                                .then(res => res.json())
                                .then(data => {
                                    if (data && data.success) {
                                        showToast('‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'success');
                                        document.dispatchEvent(new Event('repair-updated'));
                                    } else {
                                        showToast('‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', 'error');
                                    }
                                })
                                .catch(() => {
                                    showToast('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö', 'error');
                                });
                            }
                        });
                    });
                });
            } else {
                tbody.innerHTML = `<tr>
                    <td colspan="5" class="text-center py-6 text-gray-400 text-lg">
                        üòï ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
                    </td>
                </tr>`;
            }
        });
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á toast alert
function showToast(message, type = 'success') {
    const toast = document.getElementById('toast-alert');
    const content = document.getElementById('toast-content');
    content.textContent = message;
    content.className = "flex items-center px-4 py-3 rounded shadow text-white font-semibold";
    if (type === 'success') {
        content.classList.add('bg-green-600');
    } else if (type === 'error') {
        content.classList.add('bg-red-600');
    } else {
        content.classList.add('bg-gray-700');
    }
    toast.classList.remove('hidden');
    setTimeout(() => {
        toast.classList.add('hidden');
    }, 2000);
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á tailwind confirm
function showTailwindConfirm({ title, message, confirmText = '‡∏ï‡∏Å‡∏•‡∏á', cancelText = '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å', onConfirm }) {
    // ‡∏•‡∏ö dialog ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    let old = document.getElementById('tailwind-confirm-bg');
    if (old) old.remove();

    const bg = document.createElement('div');
    bg.id = 'tailwind-confirm-bg';
    bg.className = 'fixed inset-0 z-[99999] flex items-center justify-center bg-black bg-opacity-40';

    const box = document.createElement('div');
    box.className = 'bg-white rounded-xl shadow-xl max-w-xs w-full p-6 text-center';

    const h = document.createElement('h3');
    h.className = 'text-lg font-bold mb-2 text-red-600';
    h.textContent = title;

    const msg = document.createElement('div');
    msg.className = 'mb-4 text-gray-700';
    msg.textContent = message;

    const btnGroup = document.createElement('div');
    btnGroup.className = 'flex justify-center gap-3';

    const btnConfirm = document.createElement('button');
    btnConfirm.className = 'bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded font-semibold';
    btnConfirm.textContent = confirmText;

    const btnCancel = document.createElement('button');
    btnCancel.className = 'bg-gray-300 hover:bg-gray-400 text-gray-800 px-4 py-2 rounded font-semibold';
    btnCancel.textContent = cancelText;

    btnGroup.appendChild(btnConfirm);
    btnGroup.appendChild(btnCancel);

    box.appendChild(h);
    box.appendChild(msg);
    box.appendChild(btnGroup);
    bg.appendChild(box);
    document.body.appendChild(bg);

    btnCancel.onclick = () => bg.remove();
    btnConfirm.onclick = () => {
        bg.remove();
        if (typeof onConfirm === 'function') onConfirm();
    };
    // ‡∏õ‡∏¥‡∏î dialog ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á
    bg.onclick = (e) => { if (e.target === bg) bg.remove(); };
}
</script>
<?php require_once('script.php'); ?>
</body>
</html>
